"!" and "?" are very different syntactical elements. "!" can refer to the not operator if placed before an expression, or can be used as part of a method name (but usually refers to a destructive version of a separate non destructive method), and refers to the not equals operator when appended with an "=" i.e. "!=". "?", on the other hand, can refer to a part of the ternary operator x ? y : z, where x is an expression that evaluates to a truthy or falsy value, and y and z are both expressions that are evaluated or ignored depending on the value of x. "?" can also be used as part of a method name, but usually refers to methods that return a boolean true or false value.

1: "!=" is the not equals operator, which returns true if the values being compared are equal, and returns false otherwise. Use "!=" in conditional statements if you want to perform a certain action when two objects aren't equal, or in a method if determining if two objects are equal or not is relevant to the method's return value
2: The "!" would evaluate to true if the expression following it is falsy, and would evaluate to false if the expression following it is truthy
3: The "!", if appended to a method name, would refer to a completely different method and would only work if the calling object had an implementation for the method with said method name with an additional "!" at the end. This is a Ruby convention usually used to refer to two different versions of a method where #method is non destructive while #method! is destructive.
4: The "?" would only do something if it were part of a larger ternary expression, e.g. "test_expression ? expression1 : expression2". Apart from that, it wouldn't do anything.
5: Similar to #3, the "?", if appended to a method name, would refer to a completely different method and would only work if the calling object had an implementation for the method with said method name with an additional "?" at the end. This is a Ruby convention usually used to refer a method that returns a boolean value, e.g. #method?.
6: The "!!" is equivalent to two "!" operators next to each other, which means it would evaluate to true if the second "!" evaluated to false, and vice versa. In other words, "!!" would evaluate to true if the expression following it is truthy, and would evaluate to false if the expression following it is falsy. Because of this, this is often used to convert an object's truthiness or falsiness directly into a true or false boolean value.